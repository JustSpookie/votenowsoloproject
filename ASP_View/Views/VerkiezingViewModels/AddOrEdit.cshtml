@model ASP_View.Models.AddVerkiezingViewModel

@{
    ViewData["Title"] = Model.verkiezingViewModel.VerkiezingID==0?"Maak gebruiker":"Update gebruiker";
}

<h1>@ViewData["Title"]</h1>

<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-controller="VerkiezingViewModels" asp-action="AddOrEdit" autocomplete="off">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="verkiezingViewModel.VerkiezingID" />
            <div class="form-group">
                <label asp-for="verkiezingViewModel.VerkiezingNaam" class="control-label"></label>
                <input asp-for="verkiezingViewModel.VerkiezingNaam" class="form-control" /> 
                <span asp-validation-for="verkiezingViewModel.VerkiezingNaam" class="text-danger"></span>
            </div>
            <p> </p>
            <p>Kies kandidaten:</p>
            <div class="form-group">
                @for(int i=0; i<Model.ListKandidaten.Count; i++)
                {
                    @Html.CheckBoxFor(m=>m.ListKandidaten[i].Selected);
                     <label >@Model.ListKandidaten[i].KandidaatNaam</label><br>
                }

            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
